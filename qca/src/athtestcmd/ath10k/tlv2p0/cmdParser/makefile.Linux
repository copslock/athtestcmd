CC =$(TOOLPREFIX)gcc
LD =$(TOOLPREFIX)ld
#CC = ../../../../../staging_dir/toolchain-arm_cortex-a7_gcc-4.8-linaro_uClibc-0.9.33.2_eabi/bin/arm-openwrt-linux-uclibcgnueabi-gcc
#LD = ../../../../../staging_dir/toolchain-arm_cortex-a7_gcc-4.8-linaro_uClibc-0.9.33.2_eabi/bin/arm-openwrt-linux-uclibcgnueabi-ld



CMN_INCLUDE_DIR = ../../include
TLV_ROOT = ../../tlv2p0
TLV2P0_INC_DIR = $(TLV_ROOT)/include

CFLAGS = -fPIC -D_DEBUG -DDEBUG -DLINUX -DLinux -DTEST_STANDALONE -D_HOST_SIM_TESTING -D_FOR_HOST_TESTING -fno-stack-protector -Wno-pointer-to-int-cast
CFLAGS += -I$(CMN_INCLUDE_DIR) -I$(TLV2P0_INC_DIR) -I$(TLV_ROOT)/common/output -I../include
CFLAGS += -g

#LDFLAGS	= -L$(WORKAREA)/TLV2p0/cmdEncoder/$(OS) -ltlvencoder
LDFLAGS	= 
LDFLAGS_SO := -shared 
COMMON_DIR = $(TLV_ROOT)/common
VPATH	:= . $(COMMON_DIR)
#EXTRA_SRCS := cmdRspParmsDict.c cmdRspParmsInternal.c testUtil.c
EXTRA_SRCS := cmdRspParmsDict.c cmdRspParmsInternal.c
#EXTRA_HANDLER_SRCS := cmdTxHandler.c cmdRxHandler.c
EXTRA_HANDLER_SRCS := cmdTPCCALHandler.c cmdTPCCALPWRHandler.c cmdRegReadHandler.c cmdRegWriteHandler.c cmdRxGainCalHandler.c \
	cmdBasicRspHandler.c cmdRxHandler.c cmdRxStatusHandler.c cmdTxHandler.c cmdTxStatusHandler.c \
	cmdHwCalHandler.c cmdXtalCalHandler.c \
	cmdCustOtpSpaceGetSize.c cmdCustOtpSpaceRead.c cmdCustOtpSpaceWrite.c \
	cmdDPDComplete.c cmdGetTgtPwr.c cmdSetRegDmn.c \
	cmdSetPCIEConfigParam.c cmdCommitOtpStream.c

ifeq ($(OS),)
OS := Linux
endif

ifeq ($(DEBUG),1)
    CFLAGS += -g
endif


#BINCMDENCODER       = $(OS)/testEncoder.out
#SRCS_BINCMDENCODER  := testEncoder.c $(EXTRA_SRCS)
#OBJS_BINCMDENCODER  :=  $(patsubst %.c,$(OS)/%.o,$(SRCS_BINCMDENCODER))

LIB_SO_PARSERTLV2   := $(OS)/libtlvparser.so
LIB_PARSERTLV2      := $(OS)/libtlvparser.a
SRCS_PARSERTLV2     := parseBinCmdStream_v2.c cmdHandlerTbl.c $(EXTRA_SRCS) $(EXTRA_HANDLER_SRCS)
OBJS_PARSERTLV2     :=  $(patsubst %.c,$(OS)/%.o,$(SRCS_PARSERTLV2))

all: dirs $(LIB_SO_PARSERTLV2) $(LIB_PARSERTLV2) 

dirs:
	mkdir -p $(OS)

#$(BINCMDENCODER): $(OBJS_BINCMDENCODER) 
#	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(OBJS_BINCMDENCODER)

$(LIB_PARSERTLV2): $(OS) $(OBJS_PARSERTLV2)
	$(AR) rcs $@ $(OBJS_PARSERTLV2)

$(LIB_SO_PARSERTLV2): $(OS) $(OBJS_PARSERTLV2)
	$(LD) $(LDFLAGS_SO) -o $@ $(OBJS_PARSERTLV2)

$(OS)/%.o : %.c
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -rf $(OS) 

.PHONY:
	clean all

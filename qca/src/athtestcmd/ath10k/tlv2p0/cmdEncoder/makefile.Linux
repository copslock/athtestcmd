CC =$(TOOLPREFIX)gcc
LD =$(TOOLPREFIX)ld

#CC = ../../../../../staging_dir/toolchain-arm_cortex-a7_gcc-4.8-linaro_uClibc-0.9.33.2_eabi/bin/arm-openwrt-linux-uclibcgnueabi-gcc
#LD = ../../../../../staging_dir/toolchain-arm_cortex-a7_gcc-4.8-linaro_uClibc-0.9.33.2_eabi/bin/arm-openwrt-linux-uclibcgnueabi-ld


CMN_INCLUDE_DIR = ../../include
TLV_ROOT = ../../tlv2p0
TLV2P0_INC_DIR = $(TLV_ROOT)/include

CFLAGS = -fPIC -D_DEBUG -DDEBUG -DLINUX -DLinux -DTEST_STANDALONE -D_HOST_SIM_TESTING -D_FOR_HOST_TESTING -fno-stack-protector -Wno-pointer-to-int-cast
CFLAGS += -I$(CMN_INCLUDE_DIR) -I$(TLV2P0_INC_DIR) -I$(TLV_ROOT)/common/output -I../include

LDFLAGS	= -L$(TLV_ROOT)/cmdEncoder/$(OS)
LDFLAGS_SO := -shared 
COMMON_DIR = $(TLV_ROOT)/common
VPATH	:= . $(COMMON_DIR)
#EXTRA_SRCS := cmdRspParmsDict.c cmdRspParmsInternal.c testUtil.c
EXTRA_SRCS := cmdRspParmsDict.c cmdRspParmsInternal.c

ifeq ($(OS),)
OS := Linux
endif

ifeq ($(DEBUG),1)
    CFLAGS += -g
endif


BINCMDENCODER       = $(OS)/testEncoder.out
SRCS_BINCMDENCODER  := testEncoder.c $(EXTRA_SRCS)
OBJS_BINCMDENCODER  :=  $(patsubst %.c,$(OS)/%.o,$(SRCS_BINCMDENCODER))

LIB_SO_ENCODETLV2   := $(OS)/libtlvencoder.so
LIB_ENCODETLV2      := $(OS)/libtlvencoder.a
SRCS_ENCODETLV2     := tlvCmdEncoder.c $(EXTRA_SRCS)
OBJS_ENCODETLV2     :=  $(patsubst %.c,$(OS)/%.o,$(SRCS_ENCODETLV2))

#all: dirs $(LIB_SO_ENCODETLV2) $(LIB_ENCODETLV2) $(BINCMDENCODER)
all: dirs $(LIB_SO_ENCODETLV2) $(LIB_ENCODETLV2) 

dirs:
	mkdir -p $(OS)

$(BINCMDENCODER): $(OBJS_BINCMDENCODER) 
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(OBJS_BINCMDENCODER)

$(LIB_ENCODETLV2): $(OS) $(OBJS_ENCODETLV2)
	$(AR) rcs $@ $(OBJS_ENCODETLV2)

$(LIB_SO_ENCODETLV2): $(OS) $(OBJS_ENCODETLV2)
	$(LD) $(LDFLAGS_SO) -o $@ $(OBJS_ENCODETLV2)

$(OS)/%.o : %.c
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -rf $(OS) 

.PHONY:
	clean all
